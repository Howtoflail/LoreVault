stages:
  - build
  - test
  - deploy

variables:
  DOTNET_VERSION: "8.0"
  BUILD_CONFIG: "Release"
  PROJECT_PATH: "./LoreVault/LoreVault.API/LoreVault.API.csproj"
  IMAGE_NAME: "howtofail/lorevault-api"

# Use .NET SDK image as the base image
image: mcr.microsoft.com/dotnet/sdk:8.0

# Add Docker service to enable Docker commands
services:
  - docker:24.0.5-dind

before_script:
  - apt-get update && apt-get install -y docker.io
  - echo "Using .NET version $DOTNET_VERSION"
  - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  # - export DOCKER_HOST=tcp://docker:2375
  - docker info
  # - echo "$CI_JOB_TOKEN" | docker login -u "gitlab-ci-token" --password-stdin "registry.gitlab.com"

build:
  stage: build
  script:
    - docker ps
    - docker build --build-arg BUILD_CONFIGURATION=$BUILD_CONFIG -t $IMAGE_NAME:$CI_COMMIT_SHORT_SHA -f ./LoreVault/Dockerfile .
    - docker push $IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  only:
    - development

test:
  stage: test
  script:
    - docker run --rm $IMAGE_NAME:$CI_COMMIT_SHORT_SHA dotnet test $PROJECT_PATH --no-build --verbosity normal
  only:
    - development

deploy:
  stage: deploy
  script:
    - echo "Deploying image $IMAGE_NAME:$CI_COMMIT_SHORT_SHA"
  only:
    - main
  when: manual